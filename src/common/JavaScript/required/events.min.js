const fs = require('fs');

class Events {
    /**
     * @param {String} p 
     */
    constructor(p) {
        this.path = p;

        this.events = {};
    }

    /**
     * @returns {void}
     */
    check () {
        for (var file of fs.readdirSync(`${this.path}/common/JavaScript/events/`)) {
            if (file.endsWith('.js')){
                var { info } = require(`${this.path}/common/JavaScript/events/${file}`);

                if (info) {
                    for (var event of Object.keys(info)) {
                        if (!this.events[event]) {
                            this.events[event] = {version: info[event].version, callback: info[event].func};
                        } else if (this.events[event].version != info[event].version) {
                            this.events[event] = {version: info[event].version, callback: info[event].func};
                        }
                    }
                }

                delete require.cache[require.resolve(`${this.path}/common/JavaScript/events/${file}`)];
            }
        }
    }

    /**
     * @param {String} event
     * @returns {function | null}
     */
    run(event) {
        if (this.events[event]) {
            return this.events[event].callback;
        }
        return null;
    }
}

exports.Events = Events;